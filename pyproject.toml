[tool.poetry]
name = "tdd_showcase"
version = "1.0.0"
description = "This is a simple project to showcase a TDD-Workflow for a simple beginner workshop. It presents a small task/challenge and possible solutions step-by-step."
authors = ["Moritz Sauter <sautermoritz@gmx.de>"]
license = "MIT"
readme = "README.md"

packages = [{ include = "tdd_showcase", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"

# technically these are all dev-dependencies but this is not a prod repo
# therefore they are here for easier use
mypy = "^1.10"
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
ruff = "^0.5.2"

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = "src"

# output style configuration
show_column_numbers = true
show_error_codes = true
show_error_context = true
pretty = true

# additional warnings
strict = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true
warn_unreachable = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
# disallow_any_explicit = true
disallow_any_generics = true
disallow_untyped_calls = true

enable_error_code = ["ignore-without-code"]

[tool.ruff]
preview = true
lint.select = ["ALL"]
lint.ignore = [
    "D1",      # docstrings
    "D406",    # weird section heading things
    "D203",    # one-blank-line-before-class
    "D212",    # multi-line-summary-first-line
    "PLC0414", # useless import alias
    "TCH",     # type checking blocks
    "TD003",   # todo issue links
    "ANN10",   # typing self and cls
    "FIX002",  # TODO anywhere in comments
    "CPY001",  # Copyright notices until configurable
]
line-length = 80
target-version = "py310"

[tool.ruff.lint.per-file-ignores]
"src/*" = ["PT"] # pytest rule set
"tests/*" = [
    "D1",      # docstrings
    "S101",    # `assert` detected
    "PLR0913", # too-many-arguments
]

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

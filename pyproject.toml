[tool.poetry]
name = "tdd_showcase"
version = "1.0.0"
description = "This is a simple project to showcase a TDD-Workflow for a simple beginner workshop. It presents a small task/challenge and possible solutions step-by-step."
authors = ["Moritz Sauter <sautermoritz@gmx.de>"]
license = "MIT"
readme = "README.md"

packages = [
    { include = "tdd_showcase", from = "src" }
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"

# technically these are all dev-dependencies but this is not a prod repo
# therefore they are here for easier use
black = "^24.4.2"
isort = "^5.13.2"
mypy = "^1.10"
pylint = "^3.2.5"
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pyupgrade = "^3.8.0"

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.pylint.master]
jobs = 0

[tool.pylint.basic]
good-names = [
    "_", "__", "___", # unneeded variables
    "T", # generic type
]

[tool.pylint.message_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "line-too-long",
    "too-few-public-methods",
]
enable = [
    "useless-suppression"
]

[tool.mypy]
# output style configuration
show_column_numbers = true
show_error_codes = true
pretty = true

# additional warnings
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_no_return = true

no_implicit_optional = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
# disallow_any_explicit = true
disallow_any_generics = true
disallow_untyped_calls = true
